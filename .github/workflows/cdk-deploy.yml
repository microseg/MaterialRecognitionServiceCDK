name: CDK Deploy (OIDC)

on:
  # Manual runs from the Actions tab (shows a branch selector)
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref (branch or tag) to deploy"
        required: false
        default: "deploy-test"

permissions:
  id-token: write        # required for GitHub OIDC
  contents: read

# Prevent overlapping deploys
concurrency: deploy-materialrecognitionservice

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Set these repo secrets:
      #   AWS_ACCOUNT_ID = 630888660487
      #   AWS_REGION     = us-east-1
      #   AWS_ROLE_ARN   = arn:aws:iam::630888660487:role/GithubActions-CDK-Deploy
      CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
      CDK_DEFAULT_REGION:  ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Allow choosing which branch/tag to deploy at run time
          ref: ${{ github.event.inputs.ref }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build (TypeScript -> JS)
        run: npm run build --if-present

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: github-actions-cdk

      - name: Show CDK env
        run: |
          echo "Account=$CDK_DEFAULT_ACCOUNT"
          echo "Region=$CDK_DEFAULT_REGION"
          npx cdk --version

      # Idempotent: creates/updates CDKToolkit and assets bucket in us-east-1
      - name: CDK bootstrap (new-style)
        env:
          CDK_NEW_BOOTSTRAP: "1"
        run: |
          npx cdk bootstrap aws://$CDK_DEFAULT_ACCOUNT/$CDK_DEFAULT_REGION \
            --qualifier hnb659fds \
            --cloudformation-execution-policies arn:aws:iam::aws:policy/AdministratorAccess

      - name: Sanity check: list assets bucket
        run: |
          ASSETS="cdk-hnb659fds-assets-$CDK_DEFAULT_ACCOUNT-$CDK_DEFAULT_REGION"
          aws s3 ls "s3://$ASSETS" --region "$CDK_DEFAULT_REGION" || true

      - name: Synthesize
        run: npx cdk synth --verbose

      - name: Deploy
        env:
          CDK_DEBUG_
